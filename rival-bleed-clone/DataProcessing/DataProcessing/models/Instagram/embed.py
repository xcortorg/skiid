# generated by datamodel-codegen:
#   timestamp: 2023-07-15T00:37:22+00:00

from __future__ import annotations

from typing import Optional, List

from pydantic import AnyUrl, BaseModel, Field


class ClipsMusicAttributionInfo(BaseModel):
    artist_name: Optional[str] = None
    song_name: Optional[str] = None
    uses_original_audio: Optional[bool] = None
    should_mute_audio: Optional[bool] = None
    should_mute_audio_reason: Optional[str] = None
    audio_id: Optional[str] = None


class Dimensions(BaseModel):
    height: Optional[int] = None
    width: Optional[int] = None


class Resource(BaseModel):
    config_width: Optional[int] = None
    config_height: Optional[int] = None
    src: Optional[AnyUrl] = None


class Edge(BaseModel):
    count: Optional[int] = None


class PurpleNode(BaseModel):
    text: Optional[str] = None


class SharingFrictionInfo(BaseModel):
    should_have_sharing_friction: Optional[bool] = None


class TentacledNode(BaseModel):
    id: Optional[str] = None
    thumbnail_src: Optional[AnyUrl] = None
    thumbnail_resources: Optional[List[Resource]] = None


class StickyNode(BaseModel):
    permalink: Optional[AnyUrl] = None
    shortcode: Optional[str] = None
    thumbnail_src: Optional[AnyUrl] = None


class EdgeMediaToCaptionEdge(BaseModel):
    node: Optional[PurpleNode] = None


class FluffyNode(BaseModel):
    typename: Optional[str] = Field(alias="__typename")
    id: Optional[str] = None
    shortcode: Optional[str] = None
    commenter_count: Optional[int] = None
    dimensions: Optional[Dimensions] = None
    display_url: Optional[AnyUrl] = None
    display_resources: Optional[List[Resource]] = None
    is_video: Optional[bool] = False
    sharing_friction_info: Optional[SharingFrictionInfo] = None
    product_type: Optional[str] = None
    video_url: Optional[AnyUrl] = None
    video_view_count: Optional[int] = None


class EdgeOwnerToTimelineMediaEdge(BaseModel):
    node: Optional[TentacledNode] = None


class EdgeOwnerToTimelineVideoMediaEdge(BaseModel):
    node: Optional[StickyNode] = None


class EdgeMediaTo(BaseModel):
    edges: Optional[List[EdgeMediaToCaptionEdge]] = None


class EdgeSidecarToChildrenEdge(BaseModel):
    node: Optional[FluffyNode] = None


class EdgeOwnerToTimelineMedia(BaseModel):
    count: Optional[int] = None
    edges: Optional[List[EdgeOwnerToTimelineMediaEdge]] = None


class EdgeOwnerToTimelineVideoMedia(BaseModel):
    edges: Optional[List[EdgeOwnerToTimelineVideoMediaEdge]] = None


class EdgeSidecarToChildren(BaseModel):
    edges: Optional[List[EdgeSidecarToChildrenEdge]] = None


class Owner(BaseModel):
    id: Optional[str] = None
    profile_pic_url: Optional[AnyUrl] = None
    username: Optional[str] = None
    followed_by_viewer: Optional[bool] = None
    has_public_story: Optional[bool] = None
    is_private: Optional[bool] = None
    is_unpublished: Optional[bool] = None
    is_verified: Optional[bool] = None
    edge_followed_by: Optional[Edge] = None
    edge_owner_to_timeline_media: Optional[EdgeOwnerToTimelineMedia] = None
    edge_owner_to_timeline_video_media: Optional[EdgeOwnerToTimelineVideoMedia] = None


class ShortcodeMedia(BaseModel):
    typename: Optional[str] = None
    id: Optional[str] = None
    shortcode: Optional[str] = None
    commenter_count: Optional[int] = None
    dimensions: Optional[Dimensions] = None
    display_url: Optional[AnyUrl] = None
    display_resources: Optional[List[Resource]] = None
    is_video: Optional[bool] = False
    sharing_friction_info: Optional[SharingFrictionInfo] = None
    owner: Optional[Owner] = None
    taken_at_timestamp: Optional[int] = None
    edge_media_to_caption: Optional[EdgeMediaTo] = None
    edge_media_to_sponsor_user: Optional[EdgeMediaTo] = None
    is_affiliate: Optional[bool] = None
    is_paid_partnership: Optional[bool] = None
    like_and_view_counts_disabled: Optional[bool] = None
    media_preview: Optional[str] = None
    edge_media_to_comment: Optional[Edge] = None
    edge_liked_by: Optional[Edge] = None
    coauthor_producers: Optional[list] = None
    pinned_for_users: Optional[list] = None
    edge_sidecar_to_children: Optional[EdgeSidecarToChildren] = None
    title: Optional[str] = None
    product_type: Optional[str] = None
    video_url: Optional[AnyUrl] = None
    video_view_count: Optional[int] = None
    clips_music_attribution_info: Optional[ClipsMusicAttributionInfo] = None


class Data(BaseModel):
    shortcode_media: Optional[ShortcodeMedia] = None


class Extra(BaseModel):
    data: Optional[Data] = None


class InstagramEmbedDataRaw(BaseModel):
    extra: Optional[Extra] = None
